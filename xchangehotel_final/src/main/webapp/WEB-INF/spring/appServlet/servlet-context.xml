<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<context:component-scan base-package="com.demo.*" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Property place holder configuration -->
	<beans:bean
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:database.properties</beans:value>
				<beans:value>classpath:hibernate.properties</beans:value>
				<beans:value>classpath:email.properties</beans:value>
				<beans:value>classpath:social.properties</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="ignoreUnresolvablePlaceholders" value="true"/>
	</beans:bean>

	<!-- Configuration for message source -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>classpath:message</beans:value>
				<beans:value>classpath:errormessage</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Database Configuration -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="${database.driverClassName}" />
		<beans:property name="url" value="${database.url}" />
		<beans:property name="username" value="${database.username}" />
		<beans:property name="password" value="${database.password}" />
	</beans:bean>

	<!-- Session Factory Configuration -->
	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<beans:property name="configurationClass" value="org.hibernate.cfg.Configuration" />

		<!-- Hibernate configuration -->
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">
					${hibernate.dialect}
				</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.showsql}</beans:prop>
				<beans:prop key="hibernate.transaction.flush_before_completion">${hibernate.transaction.flushbeforecompletion}
				</beans:prop>
				<!-- <beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop> -->
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- Mail code -->

	<!-- SET default mail properties -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="${email.host}" />
		<beans:property name="port" value="${email.port}" />
		<beans:property name="username" value="${email.username}" />
		<beans:property name="password" value="${email.password}" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">${mail.transport.protocol}</beans:prop>
				<beans:prop key="mail.smtp.auth">${mail.smtp.auth}</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</beans:prop>
				<beans:prop key="mail.debug">${mail.debug}</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- You can have some pre-configured messagess also which are ready to 
		send -->
	<beans:bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
		<beans:property name="to" value="${mail.to}" />
		<beans:property name="from" value="${mail.from}" />
		<beans:property name="subject" value="${mail.subject}" />
	</beans:bean>

	<!-- Configuration for transaction manager -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
</beans:beans>
